[{"/Users/jenniferschultz027/Documents/damlproject/src/index.js":"1","/Users/jenniferschultz027/Documents/damlproject/src/App.js":"2","/Users/jenniferschultz027/Documents/damlproject/src/reportWebVitals.js":"3","/Users/jenniferschultz027/Documents/damlproject/src/components/Header.js":"4","/Users/jenniferschultz027/Documents/damlproject/src/components/Weather.js":"5","/Users/jenniferschultz027/Documents/damlproject/src/components/Forecast.js":"6","/Users/jenniferschultz027/Documents/damlproject/src/components/Day.js":"7"},{"size":500,"mtime":1611101583128,"results":"8","hashOfConfig":"9"},{"size":269,"mtime":1612406342459,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1611101583130,"results":"11","hashOfConfig":"9"},{"size":376,"mtime":1612406133176,"results":"12","hashOfConfig":"9"},{"size":4930,"mtime":1612043499475,"results":"13","hashOfConfig":"9"},{"size":1195,"mtime":1612406340881,"results":"14","hashOfConfig":"9"},{"size":1660,"mtime":1612406341789,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"a1wuo4",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jenniferschultz027/Documents/damlproject/src/index.js",[],["34","35"],"/Users/jenniferschultz027/Documents/damlproject/src/App.js",[],"/Users/jenniferschultz027/Documents/damlproject/src/reportWebVitals.js",[],"/Users/jenniferschultz027/Documents/damlproject/src/components/Header.js",[],"/Users/jenniferschultz027/Documents/damlproject/src/components/Weather.js",["36","37","38","39","40","41","42","43","44","45"],"import React from 'react';\n\nclass Weather extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoaded: false,\n      items: [],\n      weather: {\n        sunny: \"https://icons-for-free.com/iconfiles/png/512/sunny+temperature+weather+icon-1320196637430890623.png\",\n        partlyCloudy: \"https://lh3.googleusercontent.com/proxy/ZCYpLTsoM23ERuSd6vjZrXGZc4cZmvt8Y0C1CptKPXr3RjUUHys__aXWz5K0Cf4Fj628iC-XWbYs1oxS3gY5FEeafm5M-80\",\n        amShowers: \"https://iconarchive.com/download/i43447/oxygen-icons.org/oxygen/Status-weather-showers-night.ico\",\n        pmShowers: \"https://iconarchive.com/download/i43446/oxygen-icons.org/oxygen/Status-weather-showers-day.ico\",\n        showers: \"https://cdn3.iconfinder.com/data/icons/tango-icon-library/48/weather-showers-scattered-512.png\",\n        cloudy: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQB0KuwT4iZ1TWaelvthfb4_cbmGXyaiyRqbw&usqp=CAU\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://my-json-server.typicode.com/nfried16/swe-practice/weather\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            items: result\n          });\n        } \n      )\n  }\n\n  render() {\n    const { isLoaded, items } = this.state;\n    if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div>\n          <table className = \"table\">\n            <tr className = \"date\">\n              <td>Jan {items[0].date.substring(4,5)}</td>\n              <td>Jan {items[1].date.substring(4,5)}</td>\n              <td>Jan {items[2].date.substring(4,5)}</td>\n              <td>Jan {items[3].date.substring(4,5)}</td>\n              <td>Jan {items[4].date.substring(4,5)}</td>\n              <td>Jan {items[5].date.substring(4,5)}</td>\n              <td>Jan {items[6].date.substring(4,5)}</td>\n              <td>Jan {items[7].date.substring(4,5)}</td>\n              <td>Jan {items[8].date.substring(4,5)}</td>\n              <td>Jan {items[9].date.substring(3,5)}</td>\n            </tr>\n            <tr className = \"forecast\">\n              <td><img src = {this.state.weather.sunny}/></td>\n              <td><img src = {this.state.weather.partlyCloudy}/></td>\n              <td><img src = {this.state.weather.partlyCloudy}/></td>\n              <td><img src = {this.state.weather.cloudy}/></td>\n              <td><img src = {this.state.weather.sunny}/></td>\n              <td><img src = {this.state.weather.showers}/></td>\n              <td><img src = {this.state.weather.cloudy}/></td>\n              <td><img src = {this.state.weather.amShowers}/></td>\n              <td><img src = {this.state.weather.pmShowers}/></td>\n              <td><img src = {this.state.weather.sunny}/></td>\n            </tr>\n            <tr className = \"low\">\n              <td>Low: {items[0].low_temp}{'\\u00b0'}</td>\n              <td>Low: {items[1].low_temp}{'\\u00b0'}</td>\n              <td>Low: {items[2].low_temp}{'\\u00b0'}</td>\n              <td>Low: {items[3].low_temp}{'\\u00b0'}</td>\n              <td>Low: {items[4].low_temp}{'\\u00b0'}</td>\n              <td>Low: {items[5].low_temp}{'\\u00b0'}</td>\n              <td>Low: {items[6].low_temp}{'\\u00b0'}</td>\n              <td>Low: {items[7].low_temp}{'\\u00b0'}</td>\n              <td>Low: {items[8].low_temp}{'\\u00b0'}</td>\n              <td>Low: {items[9].low_temp}{'\\u00b0'}</td>\n            </tr>\n            <tr className = \"high\">\n              <td>High: {items[0].high_temp}{'\\u00b0'}</td>\n              <td>High: {items[1].high_temp}{'\\u00b0'}</td>\n              <td>High: {items[2].high_temp}{'\\u00b0'}</td>\n              <td>High: {items[3].high_temp}{'\\u00b0'}</td>\n              <td>High: {items[4].high_temp}{'\\u00b0'}</td>\n              <td>High: {items[5].high_temp}{'\\u00b0'}</td>\n              <td>High: {items[6].high_temp}{'\\u00b0'}</td>\n              <td>High: {items[7].high_temp}{'\\u00b0'}</td>\n              <td>High: {items[8].high_temp}{'\\u00b0'}</td>\n              <td>High: {items[9].high_temp}{'\\u00b0'}</td>\n            </tr>\n            <tr className = \"precipitation\">\n              <td>Precipitation: {items[0].percent_precipitation}%</td>\n              <td>Precipitation: {items[1].percent_precipitation}%</td>\n              <td>Precipitation: {items[2].percent_precipitation}%</td>\n              <td>Precipitation: {items[3].percent_precipitation}%</td>\n              <td>Precipitation: {items[4].percent_precipitation}%</td>\n              <td>Precipitation: {items[5].percent_precipitation}%</td>\n              <td>Precipitation: {items[6].percent_precipitation}%</td>\n              <td>Precipitation: {items[7].percent_precipitation}%</td>\n              <td>Precipitation: {items[8].percent_precipitation}%</td>\n              <td>Precipitation: {items[9].percent_precipitation}%</td>\n            </tr>\n          </table>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Weather\n",["46","47"],"/Users/jenniferschultz027/Documents/damlproject/src/components/Forecast.js",["48"],"import React from 'react';\nimport Day from './Day';\n\nclass Forecast extends React.Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        isLoaded: false,\n        items: []\n      };\n    }\n\n    componentDidMount() {\n        fetch(\"https://my-json-server.typicode.com/nfried16/swe-practice/weather\")\n          .then(res => res.json())\n          .then(\n            (result) => {\n              this.setState({\n                isLoaded: true,\n                items: result\n              });\n            } \n          )\n          .catch(error => {console.error('Error');\n          throw error;\n        });\n      }\n\n    render() {\n        const { isLoaded, items } = this.state;\n        if (!isLoaded) {\n          return <div>Loading...</div>;\n        } else {\n            return (\n                <div className = 'forecast' id = 'key'>\n                    {this.state.items.map((day, id) => {\n                        return <Day date = {day.date} low = {day.low_temp} high = {day.high_temp} forecast = {day.forecast} prec = {day.percent_precipitation} key = {id}/>\n                    })}\n                </div>\n            )\n        }\n    }   \n}\n\nexport default Forecast;","/Users/jenniferschultz027/Documents/damlproject/src/components/Day.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":54,"column":19,"nodeType":"55","endLine":54,"endColumn":58},{"ruleId":"53","severity":1,"message":"54","line":55,"column":19,"nodeType":"55","endLine":55,"endColumn":65},{"ruleId":"53","severity":1,"message":"54","line":56,"column":19,"nodeType":"55","endLine":56,"endColumn":65},{"ruleId":"53","severity":1,"message":"54","line":57,"column":19,"nodeType":"55","endLine":57,"endColumn":59},{"ruleId":"53","severity":1,"message":"54","line":58,"column":19,"nodeType":"55","endLine":58,"endColumn":58},{"ruleId":"53","severity":1,"message":"54","line":59,"column":19,"nodeType":"55","endLine":59,"endColumn":60},{"ruleId":"53","severity":1,"message":"54","line":60,"column":19,"nodeType":"55","endLine":60,"endColumn":59},{"ruleId":"53","severity":1,"message":"54","line":61,"column":19,"nodeType":"55","endLine":61,"endColumn":62},{"ruleId":"53","severity":1,"message":"54","line":62,"column":19,"nodeType":"55","endLine":62,"endColumn":62},{"ruleId":"53","severity":1,"message":"54","line":63,"column":19,"nodeType":"55","endLine":63,"endColumn":58},{"ruleId":"49","replacedBy":"56"},{"ruleId":"51","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":30,"column":27,"nodeType":"60","messageId":"61","endLine":30,"endColumn":32},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["62"],["63"],"no-unused-vars","'items' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]